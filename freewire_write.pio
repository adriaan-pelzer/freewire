.program freewire_write
.side_set 1

.define public T1 3

.wrap_target
bitloop:
  out x 1         side 0 [T1]
  jmp !x do_zero  side 1 [T1]
do_one:
  jmp bitloop     side 1 [T1]
do_zero:
  nop             side 0 [T1]
.wrap

% c-sdk {
#include "hardware/clocks.h"

static inline void freewire_write_program_init(PIO pio, uint sm, uint offset, uint pin) {
  float clock_divider = (float) clock_get_hz(clk_sys) / 1000000.0f;

  pio_gpio_init(pio, pin);
  pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);
  pio_sm_config c = freewire_write_program_get_default_config(offset);
  sm_config_set_sideset_pins(&c, pin);
  sm_config_set_out_shift(&c, false, true, 32);
  sm_config_set_clkdiv(&c, clock_divider);
  sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);
  pio_sm_init(pio, sm, offset, &c);
  pio_sm_set_enabled(pio, sm, true);
}
%}
